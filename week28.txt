Homework week 28
1. Кратко опишите основные отличия state от props.
  Props передаётся в компонент (служат как параметры функции), state находится внутри компонента (по аналогии с переменными, которые объявлены внутри функции).
  Props нельзя изменить внутри компонента, state может менять состояние компонента внутри. Когда меняется state, происходит новый рендеринг страницы.

2. Какую ошибку я допустила в следующем коде и как ее исправить:
handleChange = () => {
    const chechedArr = this.state.arr; // [1,2,3] 
		chechedArr.push(5); // [1,2,3,5] 
    this.setState({
      arr: chechedArr,
    });
  };

3. Можно ли повесить на один элемент несколько обработчиков событий?
  Можно

4. Каким образом можно изменить state?
  State описывает какие-то свойства элемента, которые могут изменяться при взаимодействии с пользователем. Таким образом, для изменения state на элемент можно повесить обработчик событий, который вызовет метод setState().

5. Попробуйте предсказать какие сообщения будут в консоли и объяснить результат:
handleChange = () => {
    console.log(this.state.checked) //#1 false 
    this.setState({
      checked: !this.state.checked, //true
    });
    console.log(this.state.checked) //#2 ?
  };


6. Какими способами можно задать функцию `handleChange` и какой из них является самым правильным?
  Можно задать в конструкторе класса.
  Для функциональных компонентов можно использовать стрелочную функцию:
  const [selected, setSelected] = useState(props.selected);
  const handleChange = () => {        
    setSelected(!selected);    
  };

7. Чем отличаются классовые и функциональные компоненты? Какие из них предпочтительнее в 2021 году?
  В 2023 году предпочтительней функциональные компоненты. Классовые считаются устаревшими.
  Главное отличие классового компонента от функционального это возможность хранить внутреннее состояния.

8. Есть ли `this` в функциональных компонентах? Как можно получить к нему доступ?
  Нет, в функциональном компоненте this недоступен. Cостояние можно менять с помощью setState.

9. Можно ли использовать `props` и `state` одновременно?
  Да, можно.

10. Где можно задать `state` без использования команды `this.setState`?
  На этапе инициализации.

11. Может ли состояние классового компонента не быть объектом? А функционального?
  Нет.
  Cостояние функционального компонента может быть не только объектом.

12. Способны ли функциональные компоненты самостоятельно хранить состояние?
  У функциональных компонентов есть возможность хранить состояния, использовать методы жизненного цикла.

13. Как использовать хуки в классовых компонентах?
  Хуки не работают с классовыми компонентами, а используются вместо них.

14. А как задать начальное состояние `props`, если они еще не были переданы?
  В React предусмотрен способ устанавливать значения пропсов по умолчанию - defaultProps.